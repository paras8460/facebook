 btnLoginFb=findViewById(R.id.btn_fb);
        btnFB=findViewById(R.id.btn_fb_login);
        //Facebook Login
        List<String> permissionNeeds = Arrays.asList("user_photos", "email",
                "user_birthday", "public_profile");
        btnFB.setReadPermissions(permissionNeeds);
        btnFB.registerCallback(callbackManager,
                new FacebookCallback<LoginResult>() {
                    @Override
                    public void onSuccess(LoginResult loginResult) {

                        String accessToken = loginResult.getAccessToken()
                                .getToken();
                        Log.i("accessToken", accessToken);

                        GraphRequest request = GraphRequest.newMeRequest(
                                loginResult.getAccessToken(),
                                new GraphRequest.GraphJSONObjectCallback() {@Override
                                public void onCompleted(JSONObject object,
                                                        GraphResponse response) {

                                    Log.i("LoginActivity",
                                            response.toString());
                                    try {
                                        String id = object.getString("id");
                                        try {
                                            URL profile_pic = new URL(
                                                    "http://graph.facebook.com/" + id + "/picture?type=large");
                                            Log.i("profile_pic",
                                                    profile_pic + "");

                                        } catch (MalformedURLException e) {
                                            e.printStackTrace();
                                        }
                                        String name = object.getString("name");
                                        String email = object.getString("email");

                                       // registerUser(name,email,"","","","",id);
                                            startActivity(new Intent(getApplicationContext(),SignUpActivity.class));
                                    } catch (JSONException e) {
                                        e.printStackTrace();
                                        Toast.makeText(LoginActivity.this, e.getMessage(), Toast.LENGTH_LONG).show();
                                    }
                                }
                                });
                        Bundle parameters = new Bundle();
                        parameters.putString("fields",
                                "id,name,email,gender, birthday");
                        request.setParameters(parameters);
                        request.executeAsync();
                    }

                    @Override
                    public void onCancel() {
                        Toast.makeText(LoginActivity.this, "Login Failed.", Toast.LENGTH_SHORT).show();
                    }

                    @Override
                    public void onError(FacebookException exception) {
//                        Log.i("SignUpActivity", exception.getCause().toString());
                        Log.e("Error", exception.getMessage());
                        Toast.makeText(LoginActivity.this, "Got error, Please try again later.", Toast.LENGTH_SHORT).show();

                    }
                });
        btnLoginFb.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                if (Const.isNetworkAvailable(LoginActivity.this)){
                    btnFB.performClick();
                }
            }
        });
  //  facebook();
    }




    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        callbackManager.onActivityResult(requestCode, resultCode, data);
    }
